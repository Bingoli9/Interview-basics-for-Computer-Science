## CMakeLists.txt 编写

#### CMake 最低版本号要求
cmake_minimum_required (VERSION 2.8)

#### 项目信息
project (Demo1)

#### 指定生成目标
add_executable(Demo main.cc)


#### 单目录源文件
 ./Demo2
	|
	+--- main.cc
	|
	+--- MathFunctions.cc
	|
	+--- MathFunctions.h
	
aux_source_directory(<dir> <variable>)
查找指定目录下的所有源文件，然后将结果存进指定变量名

#### 多目录源文件
 ./Demo3
	|
	+--- main.cc
	|
	+--- math/
		 |
		 +--- MathFunctions.cc
		 |
		 +--- MathFunctions.h
		 
add_subdirectory(<dir>)
指明本项目包含一个子目录，子目录下的CMakeLists.txt 文件和源代码也会被处理

target_link_libraries(Demo, linkLib)
表明可执行文件需要连接一个名为linkLib的链接库

生成链接库
```c++
add_library (linkLib ${DIR_LIB_SRCS})
```
将目录中的源文件编译为静态链接库      


#### 安装
通过产生Makefile后使用 make install 和 make test来执行。

首先先在 math/CMakeLists.txt文件里指定 MathFunctions库的安装路径
···c++
install （TARGETS MathFunctions DESTINATION bin)
install (FILES MathFunctions.h DESTINATION include)
```
指明 MathFunctions 库的安装路径。之后同样修改根目录的 CMakeLists 文件，在末尾添加下面几行：
···c++
install (TARGETS Demo DESTINATION bin)
install (FILES "${PROJECT_BINARY_DIR}/config.h" DESTINATION include)
```
通过上面的定制，生成的 Demo 文件和 MathFunctions 函数库 libMathFunctions.o  
文件将会被复制到 /usr/local/bin 中，而 MathFunctions.h 和生成的 config.h  
文件则会被复制到 /usr/local/include 中。我们可以验证一下  
顺带一提的是，这里的 /usr/local/ 是默认安装到的根目录，可以通过修改   
CMAKE_INSTALL_PREFIX 变量的值来指定这些文件应该拷贝到哪个根目录。

